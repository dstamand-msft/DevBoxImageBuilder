name: Deploy and Run Image Template

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  RESOURCE_GROUP_NAME: ${{ vars.RESOURCE_GROUP_NAME }}
  LOCATION: ${{ vars.LOCATION }}

inputs:
  deployTemplate:
    required: true
    type: boolean

jobs:
  deploy-and-run:
    name: Deploy and Run Template
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Login to Azure
      uses: azure/login@v2
      with:
        client-id: ${{ env.AZURE_CLIENT_ID }}
        tenant-id: ${{ env.AZURE_TENANT_ID }}
        subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}
        enable-AzPSSession: true

    # see https://github.com/azure/bicep-deploy
    - name: Deploy Bicep Template
      id: deploy_bicep
      uses: azure/bicep-deploy@v2
      if: ${{ inputs.deployTemplate }}
      with:
        type: deployment
        operation: create
        scope: resourceGroup
        name: devbox-imagetemplate-deployment
        location: ${{ env.LOCATION }}
        subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resource-group-name: ${{ env.RESOURCE_GROUP_NAME }}
        template-file: ./IaC/BringYourOwnResources/aib.bicep
        parameters-file: ./IaC/BringYourOwnResources/aib.parameters.json
        deploymentMode: Incremental

    - name: Set imageTemplate environment variable
      id: set_image_template
      shell: pwsh
      run: |
        if (${{ inputs.deployTemplate }}) {
          echo "imageTemplate=${{ steps.deploy_bicep.outputs.imageTemplate }}" >> $env:IMAGE_TEMPLATE_NAME
        } else {
          $json = Get-Content './IaC/BringYourOwnResources/aib.parameters.json' | ConvertFrom-Json
          $name = $json.parameters.imageTemplateName.value
          echo "imageTemplate=$name" >> $env:IMAGE_TEMPLATE_NAME
        }

    - name: Azure PowerShell script
      uses: azure/powershell@v2
      with:
        azPSVersion: "latest"
        inlineScript: |
          ./Deployment/Invoke-ImageTemplate.ps1 `
          -ImageTemplateName ${{ env.IMAGE_TEMPLATE_NAME }} `
          -ResourceGroupName ${{ env.RESOURCE_GROUP_NAME }}